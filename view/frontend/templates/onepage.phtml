<?php
/**
 * File is used for Onepagecheckout module in Magento 2
 * Mangoit Onepagecheckout
 *
 * @category Onepagecheckout
 * @package  Mangoit
 */

?>
<?php
$objectManager = \Magento\Framework\App\ObjectManager::getInstance();
$customerSession = $objectManager->get('Magento\Customer\Model\Session');
$shippinMethodCarrierCode = '';
$shippinMethodCode = '';
$shippingInfoUrl = '';
$cartData = $objectManager->create('Magento\Checkout\Model\Session');
$storeManager = $objectManager->create('Magento\Store\Model\StoreManagerInterface');
$quote = $cartData->getQuote();
$quoteId = $quote->getId();
//check if cart contain virtual products
$cartHasVirtual = false;
$cartHasDownloadable = false;
$cartHasOtherTypeProducts = false;
if (!$customerSession->isLoggedIn()) {
    foreach ($quote->getAllItems() as $item) {
        if (($product = $item->getProduct()) && $product->getTypeId() == 
            \Magento\Catalog\Model\Product\Type::TYPE_VIRTUAL) {
            $cartHasVirtual = true;
        } elseif (($product = $item->getProduct()) && $product->getTypeId() ==
         \Magento\Downloadable\Model\Product\Type::TYPE_DOWNLOADABLE) {
            $cartHasDownloadable = true;
        } else {
            $cartHasOtherTypeProducts = true;
        }
    }
}

$resource = $objectManager->get('\Magento\Framework\App\ResourceConnection');
$quoteIdMaskTable = $resource->getTableName("quote_id_mask"); 
$connection = $resource->getConnection();
$shipconfig = $objectManager->get('\Magento\Shipping\Model\Config');
$activeCarriers = $shipconfig->getActiveCarriers();
foreach($activeCarriers as $carrierCode => $carrierModel) {
    if( $carrierMethods = $carrierModel->getAllowedMethods()){
        foreach ($carrierMethods as $methodCode => $method) {
            if ($methodCode) {
                $options = array('carrier_code'=>$carrierCode,'method_code'=>$methodCode);
            }
        }
    }
    $shippingMethods[] = $options;
}
if (count($shippingMethods) == 1) {
    $shippinMethodCarrierCode = $shippingMethods[0]['carrier_code'];
    $shippinMethodCode = $shippingMethods[0]['method_code'];
}

?>
<div id="checkout" data-bind="scope:'checkout'" class="mangoit-onepage-checkout-container checkout-container">
    <div id="checkout-loader" data-role="checkout-loader" class="loading-mask" 
    data-mage-init='{"checkoutLoader": {}}'>
        <div class="loader">
            <img src="<?php /* @escapeNotVerified */ echo $block->getViewFileUrl('images/loader-1.gif'); ?>"
                 alt="<?php /* @escapeNotVerified */ echo __('Loading...'); ?>"
                 style="position: absolute;">
        </div>
    </div>
    <!-- ko template: getTemplate() --><!-- /ko -->
    <script type="text/x-magento-init">
        {
            "#checkout": {
                "Magento_Ui/js/core/app": <?php /* @escapeNotVerified */ echo $block->getJsLayout();?>
            }
        }
    </script>
    <script>
        window.checkoutConfig = 
        <?php /* @escapeNotVerified */ echo \Zend_Json::encode($block->getCheckoutConfig()); ?>
        // Create aliases for customer.js model from customer module
        window.isCustomerLoggedIn = window.checkoutConfig.isCustomerLoggedIn;
        window.customerData = window.checkoutConfig.customerData;
    </script>
    <script>
        require([
            'mage/url',
            'Magento_Ui/js/block-loader'
        ], function(url, blockLoader) {
            blockLoader("<?php /* @escapeNotVerified */echo $block->getViewFileUrl('images/loader-1.gif'); ?>");
            return url.setBaseUrl('<?php /* @escapeNotVerified */ echo $block->getBaseUrl();?>');
        })
    </script>
    <button class="alwPlaceOrderBtn" type="submit"
     title="<?php /* @escapeNotVerified */ echo __('Place Order'); ?>" style="display: none;">
            <span title="<?php /* @escapeNotVerified */ echo __('Place Order'); ?>">
                <?php /* @escapeNotVerified */ echo __('Place Order'); ?></span>
    </button>

    <script type="text/javascript">
        require(['jquery'],function($) {
            $('.loading-mask').show();
            setTimeout(function(){
                //$('.loading-mask').show();
                console.log("cartHasOtherTypeProducts");
                var isCustomerLoggedIn = "<?php echo $customerSession->isLoggedIn(); ?>";
                var cartHasVirtual = "<?php echo $cartHasVirtual; ?>";
                var cartHasDownloadable = "<?php echo $cartHasDownloadable; ?>";
                var cartHasOtherTypeProducts = "<?php echo $cartHasOtherTypeProducts; ?>";
                console.log(cartHasOtherTypeProducts);
                // if (cartHasOtherTypeProducts) {
                    $('.alwUpdatePage:first').trigger('click');
                    //if no payment method
                    if (!$('.payment-method').length) {
                        var interval = setInterval(function() {
                            //clear if payment method available
                            if($('.payment-method').length) {
                                clearInterval(interval);
                            } else {
                                $('.alwUpdatePage:first').trigger('click');
                            }
                        }, 600); 
                    }
                // }
                
                //check if user not logged in and single method availble
                var shippingInfoUrl = "<?php echo $shippingInfoUrl; ?>";
                var shippinMethodCarrierCode = "<?php echo $shippinMethodCarrierCode; ?>";
                var shippinMethodCode = "<?php echo $shippinMethodCode; ?>";
                window.checkoutConfig.shippingInfoUrl = shippingInfoUrl;
                window.checkoutConfig.shippinMethodCarrierCode = shippinMethodCarrierCode;
                window.checkoutConfig.shippinMethodCode = shippinMethodCode;

                if (shippinMethodCarrierCode) {
                    var shippingParams = {"addressInformation":{"shipping_address":{"countryId":"US",
                    "regionId":"0","postcode":null},"billing_address":{"countryId":"US","regionId":"0",
                    "postcode":null,"saveInAddressBook":null},
                    "shipping_method_code":shippinMethodCode,"shipping_carrier_code":shippinMethodCarrierCode}};
                    $.ajax({
                        type:"POST",
                        data:JSON.stringify(shippingParams),
                        url: shippingInfoUrl,
                        async: false,
                        contentType: "application/json; charset=utf-8"
                    }).done(function(result){});
                }

                //hide loader
                $('.loading-mask').hide();
            }, 600);
        });
    </script>
</div>
